name: Expense Manager CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      GO_VERSION: "1.23"
      DB_NAME: expenses_test
      DB_USER: test_user
      DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
      REDIS_PORT: 6379

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_DB: expenses_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d expenses_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli -h localhost ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-mod-

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U test_user -d expenses_test && break
            echo "Waiting for database..."
            sleep 3
          done

      - name: Run tests
        run: go test -v ./...
        env:
          DB_URL: postgres://test_user:${{ secrets.TEST_DB_PASSWORD }}@localhost:5432/expenses_test?sslmode=disable
          REDIS_ADDR: localhost:6379
